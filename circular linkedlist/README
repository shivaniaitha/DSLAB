In a circular Singly linked list, the last node of the list contains a pointer to the first node of the list. 
We traverse a circular singly linked list until we reach the same node where we started.
The circular singly liked list has no beginning and no ending. There is no null value present in the next part of any of the nodes.
Operations on Circular Singly linked list:
1	Insertion at beginning
Adding a node into circular singly linked list at the beginning.
2	Insertion at the end
Adding a node into circular singly linked list at the end.
Deletion & Traversing
1	Deletion at beginning
Removing the node from circular singly linked list at the beginning.
2	Deletion at the end
Removing the node from circular singly linked list at the end.
3	Searching
Compare each element of the node with the given item and return the location at which the item is present in the list otherwise return null.
4	Traversing
Visiting each element of the list at least once in order to perform some specific operation.
