Doubly linked list is a complex type of linked list in which a node contains a pointer to the previous as well as the next node in the sequence.
Therefore, In a doubly linked list, a node consists of three parts: node data, pointer to the next node in sequence (next pointer) , pointer to the previous node (previous pointer).
operations:
1	Insertion at beginning
Adding the node into the linked list at beginning.
2	Insertion at end
Adding the node into the linked list to the end.
3	Insertion after specified node
Adding the node into the linked list after the specified node.
4	Deletion at beginning
Removing the node from beginning of the list
5	Deletion at the end
Removing the node from end of the list.
6	Deletion of the node having given data
Removing the node which is present just after the node containing the given data.
7	Searching
Comparing each node data with the item to be searched and return the location of the item in the list if the item found else return null.
8	Traversing
Visiting each node of the list at least once in order to perform some specific operation like searching, sorting, display, etc.


